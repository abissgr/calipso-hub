<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:task="http://www.springframework.org/schema/task" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mvc="http://www.springframework.org/schema/mvc" 
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:jpa="http://www.springframework.org/schema/data/jpa"
    xmlns:p="http://www.springframework.org/schema/p" 
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans     http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/data/jpa  http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
        http://www.springframework.org/schema/context   http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/util      http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/task      http://www.springframework.org/schema/task/spring-task.xsd
        http://www.springframework.org/schema/tx        http://www.springframework.org/schema/tx/spring-tx.xs
        http://www.springframework.org/schema/mvc       http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/aop       http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/data/jpa  http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">
 <!-- override resthub's MapperFeature.DEFAULT_VIEW_INCLUSION config -->
    
    <bean id="jsonObjectMapperFactory" class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean" p:indentOutput="true" p:failOnEmptyBeans="false">
        <property name="featuresToDisable">
            <array>
                <util:constant static-field="com.fasterxml.jackson.databind.DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES"/>
            </array>
        </property>
        <property name="featuresToEnable">
            <array>
                <util:constant static-field="com.fasterxml.jackson.databind.MapperFeature.DEFAULT_VIEW_INCLUSION"/>
            </array>
        </property>
        <property name="modulesToInstall" ref="jacksonModules"/>
    </bean>
    
    <bean id="xmlObjectMapperFactory" class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean" p:indentOutput="true" p:failOnEmptyBeans="false">
        <property name="featuresToDisable">
            <array>
                <util:constant static-field="com.fasterxml.jackson.databind.DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES"/>
            </array>
        </property>
        <property name="featuresToEnable">
            <array>
                <util:constant static-field="com.fasterxml.jackson.databind.MapperFeature.DEFAULT_VIEW_INCLUSION"/>
            </array>
        </property>
        <property name="modulesToInstall" ref="jacksonModules"/>
        <property name="objectMapper" ref="xmlMapper" />
    </bean>
    
    <bean id="userDetailsConfig"
        class="gr.abiss.calipso.userDetails.util.SimpleUserDetailsConfig">
        <constructor-arg value="calipso-sso" />
        <constructor-arg value="${calipso.domain}" />
        <constructor-arg value="/" />
    </bean>
    
    <bean class="com.fasterxml.jackson.datatype.joda.JodaModule"></bean>
    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
	    <property name="converters">
	        <!-- converters is a set of both converters and converterfactories -->
	        <bean class="gr.abiss.calipso.model.serializers.CustomEnumConverterFactory" />
	    </property>
	</bean>
    
    <!-- extend resthub JPA config databaseProperties -->
    <bean id="jpaProperties" parent="resthubCoreJpaProperties">
	    <property name="sourceMap">
	        <map merge="true">
	           <entry key="jadira.usertype.autoRegisterUserTypes" value="true" />
	            <entry key="jboss.as.jpa.providerModule" value="application" />
	            <entry key="jboss.as.jpa.managed" value="false" />
	        </map>
	    </property>
	</bean>
	
	
    <jpa:auditing auditor-aware-ref="auditorBean"/>
	<context:component-scan base-package="
    	gr.abiss.calipso, 
    	org.resthub" />
	<jpa:repositories base-package="
    	gr.abiss.calipso, 
    	org.resthub"
		factory-class="gr.abiss.calipso.jpasearch.repository.RepositoryFactoryBean" />

	<!-- THYMELEAF: Template Resolver for email templates -->
	<bean id="emailTemplateResolver"
		class="org.thymeleaf.templateresolver.ClassLoaderTemplateResolver">
		<property name="prefix" value="mail/" />
		<property name="templateMode" value="HTML5" />
		<property name="characterEncoding" value="UTF-8" />
		<property name="order" value="1" />
	</bean>
	<!--bean id="webTemplateResolver" class="org.thymeleaf.templateresolver.ServletContextTemplateResolver"> 
		<property name="prefix" value="/WEB-INF/templates/" /> <property name="suffix" 
		value=".html" /> <property name="templateMode" value="HTML5" /> <property 
		name="characterEncoding" value="UTF-8" /> </bean -->
	<!-- THYMELEAF: Template Engine (Spring3-specific version) -->

	<bean id="templateEngine" class="org.thymeleaf.spring3.SpringTemplateEngine">
		<property name="templateResolvers">
			<set>
				<ref bean="emailTemplateResolver" />
				<!-- ref bean="webTemplateResolver" / -->
			</set>
		</property>
	</bean>
	<bean class="org.resthub.web.LoggingHandlerExceptionResolver" />
	<bean class="org.springframework.orm.hibernate4.HibernateExceptionTranslator" />
	<!-- Executor for the methods marked with @async annotations -->
	<task:executor id="asyncExecutor" pool-size="25" />
	<!-- Configuration for the Runtime -->
	<task:annotation-driven executor="asyncExecutor" />

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:calipso.defaults.properties</value>
                <value>classpath:calipso.properties</value>
                <!-- value>classpath:swagger.properties</value-->
            </list>
        </property> 
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
    </bean>

	<!--mvc:annotation-driven/ -->

	<mvc:resources mapping="/static/**" location="/static/" />

	<!--mvc:default-servlet-handler/ -->

	<!-- Message externalization/internationalization -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="i18n/messages" />
		<property name="useCodeAsDefaultMessage" value="true" />
	</bean>

	<!-- Email Sender -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${mail.server.host}" />
		<property name="port" value="${mail.server.port}" />
		<property name="protocol" value="${mail.server.protocol}" />
		<!--property name="username" value="${mail.server.username}" /> <property 
			name="password" value="${mail.server.password}" / -->
		<property name="javaMailProperties">
			<util:properties location="classpath:javamail.properties" />
		</property>
	</bean>
	
	<!-- JSP views setup -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
	</bean>

	<!-- imports -->
	<import resource="applicationContext-security.xml" />
    <!-- import resource="applicationContext-acl.xml" /-->
	<!--import resource="applicationContext-social.xml" /-->
	<!--import resource="applicationContext-swagger.xml" /-->



	<bean id="userService" class="gr.abiss.calipso.service.impl.UserServiceImpl">
	</bean>
	<alias name="userService" alias="localUserService" />
	
	<!-- DB data initializers -->
	<bean id="appInitializer" class="gr.abiss.calipso.AppInitializer">
    </bean>
    

</beans>